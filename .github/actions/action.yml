name: Build, test and prepare for deploy

inputs:
  READER_TOKEN:
    description: Token for private dependency access
    required: true
  SKIP_TESTS:
    description: Skip tests
    required: false
    default: "false"
  TAG_LATEST:
    description: Also tag image as latest
    required: false
    default: "false"
  TEST_ONLY:
    description: Run tests only; skip image build/publish
    required: false
    default: "false"
  IMAGE_SUFFIX:
    description: Suffix to add to image name
    required: false
    default: "latest"

outputs:
  IMAGE:
    description: Built Docker image reference
    value: ${{ steps.docker-push.outputs.image }}

runs:
  using: composite
  steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: 1.1.20

    - name: Install dependencies
      run: bun install --immutable --ignore-scripts
      shell: bash
      env:
        NODE_AUTH_TOKEN: ${{ inputs.READER_TOKEN }}

    - name: Build app
      run: bun run build
      shell: bash

    - name: Run unit tests
      if: ${{ inputs.SKIP_TESTS != 'true' }}
      run: bun run test
      shell: bash

    - name: Setup playwright # TODO: can this be cached? It is slow :D
      if: inputs.SKIP_TESTS != true
      run: |
        bunx playwright install --with-deps
        cp packages/server/.env.sample packages/server/.env
      shell: bash

    - name: Run playwright tests
      if: inputs.SKIP_TESTS != true
      run: bunx playwright test
      shell: bash

    - name: Upload static files to Nav CDN
      uses: nais/deploy/actions/cdn-upload/v2@master
      if: inputs.TEST_ONLY != true
      with:
        team: personbruker
        source: "./packages/server/public"
        destination: "/decorator-next"
      shell: bash

    - name: Build and push docker image
      uses: nais/docker-build-push@v0
      if: inputs.TEST_ONLY != true
      id: docker-push
      with:
        team: personbruker
        tag: ${{ inputs.TAG_LATEST && 'latest' || '' }}
        # Build the latest image to arm64 as well, to enable usage on arm mac developer machines
        platforms: linux/amd64${{ inputs.TAG_LATEST && ',linux/arm64' || '' }}
