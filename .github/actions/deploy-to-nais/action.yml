name: Deploy to Nais
description: Composite action to deploy application (previous + current) to Nais.

inputs:
  DEPLOY_INSTANCE:
    description: Deployment environment / instance name.
    required: true
  CLUSTER:
    description: Nais cluster.
    required: true
  IMAGE:
    description: Container image (with tag).
    required: true
  DEPLOY_INTERNAL:
    description: Whether to deploy previous internal version first.
    required: false
    default: "false"
  HPA_FILE:
    description: Optional HPA file name under .nais/hpa/.
    required: false
  PREV_VERSION_ID:
    description: Previously deployed commit SHA (for internal deploy).
    required: false
  PREV_IMAGE:
    description: Previously deployed image (for internal deploy).
    required: false
  VARS_UPDATE_TOKEN:
    description: Token (PAT) with permissions to update variables.
    required: true

outputs:
  version-id:
    description: The version id (current commit SHA).
    value: ${{ steps.set-version-id.outputs.version_id }}

runs:
  using: composite
  steps:
    - name: Set version id
      id: set-version-id
      shell: bash
      run: |
        echo "version_id=$GITHUB_SHA" >> "$GITHUB_OUTPUT"
        echo "VERSION_ID=$GITHUB_SHA" >> "$GITHUB_ENV"

    # Deploy previous internal version (if enabled and data present)
    - name: Checkout previous version
      if: inputs.deploy-internal == 'true' && inputs.prev-version-id != '' && inputs.prev-image != ''
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.prev-version-id }}

    - name: Deploy internal previous versioned app
      if: inputs.deploy-internal == 'true' && inputs.prev-version-id != '' && inputs.prev-image != ''
      uses: nais/deploy/actions/deploy@v2
      env:
        CLUSTER: ${{ inputs.cluster }}
        RESOURCE: .nais/config-internal.yml
        VAR: image=${{ inputs.prev-image }},versionId=${{ inputs.prev-version-id }},deployInstance=${{ inputs.deploy-instance }}
        VARS: .nais/vars/${{ inputs.deploy-instance }}.yml

    # Checkout current head
    - name: Checkout current
      uses: actions/checkout@v4

    - name: Deploy HPA
      if: inputs.hpa-file != ''
      continue-on-error: true
      uses: nais/deploy/actions/deploy@v2
      env:
        CLUSTER: ${{ inputs.cluster }}
        RESOURCE: .nais/hpa/${{ inputs.hpa-file }}

    - name: Deploy external app
      uses: nais/deploy/actions/deploy@v2
      env:
        CLUSTER: ${{ inputs.cluster }}
        RESOURCE: .nais/config.yml
        VAR: image=${{ inputs.image }},versionId=${{ steps.set-version-id.outputs.version_id }},deployInstance=${{ inputs.deploy-instance }}
        VARS: .nais/vars/${{ inputs.deploy-instance }}.yml

    - name: Update vars (previous version tracking)
      env:
        GITHUB_TOKEN: ${{ inputs.vars-update-token }}
      shell: bash
      run: |
        gh variable set PREV_VERSION_ID --env "${{ inputs.deploy-instance }}" --body "${{ steps.set-version-id.outputs.version_id }}"
        gh variable set PREV_IMAGE --env "${{ inputs.deploy-instance }}" --body "${{ inputs.image }}"
        gh variable list --env "${{ inputs.deploy-instance }}"

    - name: Update version authority configmap
      uses: nais/deploy/actions/deploy@v2
      env:
        CLUSTER: ${{ inputs.cluster }}
        RESOURCE: .nais/version-authority-configmap.yml
        VAR: versionId=${{ steps.set-version-id.outputs.version_id }},deployInstance=${{ inputs.deploy-instance }}
