name: Build, test and prepare for deploy
on:
  workflow_call:
    inputs:
      IMAGE_SUFFIX:
        required: false
        type: string
      TEST_ONLY:
        required: false
        type: boolean
      SKIP_TESTS:
        required: false
        type: boolean
      TAG_LATEST:
        required: false
        type: boolean
    outputs:
      IMAGE:
        description: "Docker image"
        value: ${{ jobs.build.outputs.image }}
    secrets:
      READER_TOKEN:
        required: true

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    environment: ${{ inputs.DEPLOY_INSTANCE }}
    permissions:
      contents: read
      id-token: write
    outputs:
      IMAGE: ${{ steps.docker-push.outputs.image }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.1.20
      - name: Install dependencies
        run: bun install --immutable --ignore-scripts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: Build app
        run: bun run build
      - name: Run unit tests
        if: inputs.SKIP_TESTS != true
        run: bun run test
      # - name: Setup playwright # TODO: can this be cached? It is slow :D
      #  if: inputs.SKIP_TESTS != true
      #  run: |
      #    bunx playwright install --with-deps
      #    cp packages/server/.env.sample packages/server/.env
      #- name: Run playwright tests
      #  if: inputs.SKIP_TESTS != true
      #  run: bunx playwright test
      - name: Upload static files to Nav CDN
        uses: nais/deploy/actions/cdn-upload/v2@master
        if: inputs.TEST_ONLY != true
        with:
          team: personbruker
          source: "./packages/server/public"
          destination: "/decorator-next"
      - name: Prune deps
        run: bun install --omit=dev
      - name: Build and push docker image
        uses: nais/docker-build-push@v0
        if: inputs.TEST_ONLY != true
        id: docker-push
        with:
          team: personbruker
          tag: ${{ inputs.TAG_LATEST && 'latest' || '' }}
          #         Build the latest image to arm64 as well, to enable usage on arm mac developer machines
          platforms: linux/amd64${{ inputs.TAG_LATEST && ',linux/arm64' || '' }}
