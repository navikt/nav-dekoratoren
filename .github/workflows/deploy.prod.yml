name: Deploy to prod
on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      IMAGE: ${{ steps.build_test.outputs.IMAGE }}
    steps:
      - name: Build/Test/Publish
        id: build_test
        uses: ./.github/actions
        with:
          READER_TOKEN: ${{ secrets.READER_TOKEN }}
          IMAGE_SUFFIX: prod
          TAG_LATEST: 'true'

  deploy-prod:
    uses: ./.github/workflows/deploy-application.yml
    needs: build
    permissions:
      id-token: write
      contents: read
    with:
      DEPLOY_INSTANCE: prod
      CLUSTER: prod-gcp
      IMAGE: ${{ needs.build.outputs.IMAGE }}
      DEPLOY_INTERNAL: true
      HPA_FILE: hpa-prod.yml
    secrets:
      VARS_UPDATE_TOKEN: ${{ secrets.VARS_UPDATE_TOKEN }}

  deploy-dev-stable:
    uses: ./.github/workflows/deploy-application.yml
    needs: build
    permissions:
      id-token: write
      contents: read
    with:
      DEPLOY_INSTANCE: dev-stable
      CLUSTER: dev-gcp
      IMAGE: ${{ needs.build.outputs.IMAGE }}
      HPA_FILE: hpa-dev-stable.yml
    secrets:
      VARS_UPDATE_TOKEN: ${{ secrets.VARS_UPDATE_TOKEN }}

  deploy-beta-navno:
    uses: ./.github/workflows/deploy-application.yml
    needs: build
    permissions:
      id-token: write
      contents: read
    with:
      DEPLOY_INSTANCE: dev-beta-navno
      CLUSTER: dev-gcp
      IMAGE: ${{ needs.build.outputs.IMAGE }}
    secrets:
      VARS_UPDATE_TOKEN: ${{ secrets.VARS_UPDATE_TOKEN }}

  deploy-beta-tms:
    uses: ./.github/workflows/deploy-application.yml
    needs: build
    permissions:
      id-token: write
      contents: read
    with:
      DEPLOY_INSTANCE: dev-beta-tms
      CLUSTER: dev-gcp
      IMAGE: ${{ needs.build.outputs.IMAGE }}
    secrets:
      VARS_UPDATE_TOKEN: ${{ secrets.VARS_UPDATE_TOKEN }}

  release:
    name: Create a new release
    needs: deploy-prod
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Generate unique tag name
        run: echo "TAG_NAME=$(date +%s)" >> $GITHUB_ENV
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          target_commitish: main
          tag_name: release/prod@${{ env.TAG_NAME }} # Generates a unique tag using timestamp
          name: Release ${{ github.ref_name }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }} # This is a PAT with repo permissions
