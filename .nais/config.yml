---
apiVersion: nais.io/v1alpha1
kind: Application
metadata:
  name: {{appName}}
  namespace: personbruker
  labels:
    team: personbruker
    dekoratorenType: external
  annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: "256M"
      nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
spec:
  image: {{image}}
  port: 8089
  liveness:
    path: {{appPath}}/api/isAlive
    initialDelay: 10
  readiness:
    path: {{appPath}}/api/isReady
    initialDelay: 10
  prometheus:
    enabled: true
    path: {{appPath}}/metrics
  observability:
    autoInstrumentation:
      enabled: true
      runtime: nodejs
  ingresses:
  {{#each ingresses as |url|}}
    - {{url}}
  {{/each}}
  accessPolicy:
    outbound:
      rules:
        - application: nav-dekoratoren-api
        - application: navno-search-api
        - application: tms-varsel-api
          namespace: min-side
      external:
        {{#each outboundHosts as |host|}}
        - host: {{host}}
        {{/each}}
    inbound:
      rules:
        - application: "*"
          namespace: "*"
  env:
    - name: APP_NAME
      value: {{appName}}
    - name: VERSION_ID
      # Ensure this is always parsed as string!
      value: "{{versionId}}"
  {{#each env as |var|}}
    - name: {{var.name}}
      value: {{var.value}}
  {{/each}}
  envFrom:
    - secret: nav-dekoratoren
    - secret: nav-dekoratoren-unleash-api-token
  filesFrom:
    - configmap: dekoratoren-config
      mountPath: /app/config
    - configmap: dekoratoren-version-authority-{{deployInstance}}
      mountPath: /app/version-authority
  replicas:
    disableAutoScaling: true
  {{#with replicas}}
    min: {{min}}
    max: {{max}}
  {{/with}}
  resources:
  {{#with resources}}
    requests:
      cpu: {{requests.cpu}}
      memory: {{requests.memory}}
    limits:
      memory: {{limits.memory}}
  {{/with}}
